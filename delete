import React, {useContext, useState, useEffect} from "react";
import PopupWithForm from "./PopupWithForm";
import { currentUserContext } from "../contexts/CurrentUserContext";

function EditProfilePopup({ isOpen, onClose, onUbdateUser}) {
  const currentUser = useContext(currentUserContext);
  const [name, setName] = useState("");
  const [description, setDescription] = useState("")
  const [nameDirty, setNameDirty] = useState(false);
  const [aboutDirty, setAboutDirty] = useState(false);
  const [nameError, setNameError] = useState("Поле не может быть пустым");
  const [aboutError, setAboutError] = useState("Поле не может быть пустым");
  const [formValid, setFormValid] = useState(true);
  const [nameEmpty, setNameEmpty] = useState(true);
  const [aboutEmpty, setAboutEmpty] = useState(true);
  
  useEffect(() => {
    setName(currentUser.name);
    setDescription(currentUser.about)
    setNameEmpty(false);
    setAboutEmpty(false);
    setFormValid(true)
  }, [isOpen, currentUser])

  useEffect (() => {
    if (nameError || aboutError || nameEmpty || aboutEmpty) {
      setFormValid(false)
    } else {
      setFormValid(true)
    }
  },[nameError, aboutError, nameEmpty, aboutEmpty])

  function handleChangeName(e) {
    setName((e.target.value));

    if(e.target.value.length < 3 || e.target.value.length > 30) {
      setNameError('Это поле должно содержать от 3 до 30 символов')
    } else {
      setNameError('')
    }
  }

  function handleChangeAbout(e) {
    setDescription((e.target.value))

    if(e.target.value.length < 3 || e.target.value.length > 30) {
      setAboutError('Это поле должно содержать от 3 до 30 символов')
    } else {
      setAboutError('')
    }
  }

  function handleSubmit(e) {
    e.preventDefault();

    onUbdateUser({
      name: name,
      about: description
    });
  }
  
  function blurHandleName (e) {
    switch(e.target.name) {
      case 'name':
        setNameDirty(true)
        break

        default:
    }
  }

  function blurHandleAbout (e) {
    switch(e.target.name) {
      case 'about':
        setAboutDirty(true)
        break

        default:
    }
  }

  return (
    <PopupWithForm
      name="edit"
      title="Редактировать профиль"
      buttonText="Сохранить"
      isOpen={isOpen}
      onClose={onClose}
      onSubmit={handleSubmit}
      disabled={!formValid}
    >
      <>
        <div className="form__field">
          <input
            type="text"
            name="name"
            value={name || ""}
            onChange={handleChangeName}
            onBlur={blurHandleName}
            placeholder="Имя"
            id="name-input"
            className="form__input form__input_el_name"
          />
          {(nameDirty && nameError) && <span style={{color:'red', fontSize: 12}}>{nameError}</span>}
        </div>
        <div className="form__field">
          <input
            type="text"
            name="job"
            value={description || ""}
            onChange={handleChangeAbout}
            onBlur={blurHandleAbout}
            placeholder="О себе"
            id="job-input"
            className="form__input form__input_el_job"
          />
          {(aboutDirty && aboutError) && <span style={{color:'red', fontSize: 12}}>{aboutError}</span>}
        </div>
      </>
    </PopupWithForm>
  );
}

export default EditProfilePopup;